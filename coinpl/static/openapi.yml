openapi: 3.0.0
info:
  title: CoinPL API
  description: This is the API doc for the CoinPL Application
  version: "1.0.0-oas3"
  termsOfService: 'https://konghq.com/terms/'
  contact:
    email: exleym@gmail.com
  license:
    name: Limited license
    url: 'https://github.com/exleym/coinpl'
servers:
  - url: 'http://localhost/api/v1.0'
    description: User Docker Server
paths:
  /alert:
    post:
      tags:
        - alert
      summary: add alert
      description: Create a new Alert
      operationId: createAlert
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Alert'
    put:
      tags:
        - alert
      summary: update alert
      description: This method allows an alert to be updated with data
      operationId: updateAlert
      parameters:
        - name: alert_id
          in: path
          description: name that need to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: Alert not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Alert'
        description: Updated alert object
        required: true
    get:
      tags:
        - alert
      summary: get alerts
      description: Get Alerts
      operationId: getAlerts
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Alert Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Alert'
  '/alert/{alert_id}':
    get:
      tags:
        - alert
      summary: get alert
      description: Get an Alert by Id
      operationId: getAlert
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: alert_id
          in: path
          description: id associated with the target alert
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Alert Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Alert'
    delete:
      tags:
        - alert
      summary: delete alert
      description: Delete an Alert from the system. Will actually soft-delete.
      operationId: deleteAlert
      parameters:
        - name: alert_id
          in: path
          description: The id of the alert that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid alert supplied
        '404':
          description: Alert not found
  /alert_type:
    post:
      tags:
        - alert_type
      summary: add alert type
      description: Create a new AlertType
      operationId: createAlertType
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/AlertType'
    put:
      tags:
        - alert_type
      summary: update alert type
      description: This method allows an AlertType to be updated with data
      operationId: updateAlertType
      parameters:
        - name: alert_type_id
          in: query
          description: alert type that needs to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: Alert not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertType'
        description: Updated alert type object
        required: true
    get:
      tags:
        - alert_type
      summary: get alert types
      description: Get AlertTypes
      operationId: getAlertTypes
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: AlertType Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/AlertType'
  '/alert_type/{alert_type_id}':
    get:
      tags:
        - alert_type
      summary: get alert type
      description: Get an AlertType by Id
      operationId: getAlertType
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: alert_type_id
          in: path
          description: id associated with the target AlertType
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: AlertType Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/AlertType'
    delete:
      tags:
        - alert_type
      summary: delete alert type
      description: Delete an AlertType from the system. Will soft-delete.
      operationId: deleteAlertType
      parameters:
        - name: alert_type_id
          in: path
          description: The id of the AlertType that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid alert supplied
        '404':
          description: AlertType not found
  /currency:
    post:
      tags:
        - currency
      summary: add a currency
      description: Create a new Currency
      operationId: createCurrency
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Currency'
    put:
      tags:
        - currency
      summary: update currency
      description: This method allows a Currency to be updated with data
      operationId: updateCurrency
      parameters:
        - name: currency_id
          in: query
          description: currency that needs to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid currency supplied
        '404':
          description: Currency not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Currency'
        description: Updated currency object
        required: true
    get:
      tags:
        - currency
      summary: get currency
      description: Get Currency
      operationId: getCurrency
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Currency Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Currency'
  '/currency/{currency_id}':
    get:
      tags:
        - currency
      summary: get currency
      description: Get an Currency by Id
      operationId: getCurrency
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: currency_id
          in: path
          description: id associated with the target Currency
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Currency Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Currency'
    delete:
      tags:
        - currency
      summary: delete currency type
      description: Delete an Currency from the system. Will soft-delete.
      operationId: deleteCurrency
      parameters:
        - name: currency_id
          in: path
          description: The id of the Currency that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid currency supplied
        '404':
          description: Currency not found
  /cut:
    post:
      tags:
        - cut
      summary: trigger a cut
      description: Trigger a PL Cut
      operationId: createCut
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Cut'
    get:
      tags:
        - cut
      summary: get cuts
      description: Get Cuts
      operationId: getCuts
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Cut Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Cut'
  '/cut/{cut_id}':
    get:
      tags:
        - cut
      summary: get cut by id
      description: Get a Cut by Id
      operationId: getCut
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: cut_id
          in: path
          description: id associated with the target Cut
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Cut Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Cut'
    delete:
      tags:
        - cut
      summary: delete cut by id
      description: Delete a Cut from the system. Will soft-delete.
      operationId: deleteCut
      parameters:
        - name: cut_id
          in: path
          description: The id of the Cut that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid Cut supplied
        '404':
          description: Cut not found
  /exchange:
    post:
      tags:
        - exchange
      summary: create a new exchange
      description: Add an Exchange
      operationId: createExchange
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Exchange'
    put:
      tags:
        - exchange
      summary: update exchange
      description: This method allows an Exchange to be updated with new data
      operationId: updateExchange
      parameters:
        - name: exchange_id
          in: query
          description: exchange that needs to be updated
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid exchange supplied
        '404':
          description: Exchange not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exchange'
        description: Updated exchange object
        required: true
    get:
      tags:
        - exchange
      summary: get exchanges
      description: Get Exchanges
      operationId: getExchanges
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Exchange Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Exchange'
  '/exchange/{exchange_id}':
    get:
      tags:
        - exchange
      summary: get exchange by id
      description: Get an Exchange by Id
      operationId: getExchange
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: exchange_id
          in: path
          description: id associated with the target Exchange
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Exchange Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Exchange'
    delete:
      tags:
        - exchange
      summary: delete exchange by id
      description: Delete an Exchange from the system. Will soft-delete.
      operationId: deleteExchange
      parameters:
        - name: exchange_id
          in: path
          description: The id of the Exchange that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid Exchange supplied
        '404':
          description: Exchange not found
  /holding:
    get:
      tags:
        - holding
      summary: get holdings
      description: Get Holdings
      operationId: getHoldings
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Holding Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Holding'
  '/holding/{holding_id}':
    get:
      tags:
        - holding
      summary: get holding by id
      description: Get a Holding by Id
      operationId: getHolding
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: holding_id
          in: path
          description: id associated with the target Holding
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Holding Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Holding'
  /market:
    post:
      tags:
        - market
      summary: create a new market
      description: Add a Market
      operationId: createMarket
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Market'
    put:
      tags:
        - market
      summary: update market
      description: This method allows an Market to be corrected
      operationId: updateMarket
      parameters:
        - name: market_id
          in: query
          description: market that needs to be corrected
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid market supplied
        '404':
          description: Market not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Market'
        description: Updated market object
        required: true
    get:
      tags:
        - market
      summary: get markets
      description: Get Markets
      operationId: getMarkets
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Market Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Market'
  '/market/{market_id}':
    get:
      tags:
        - market
      summary: get market by id
      description: Get a Market by Id
      operationId: getMarket
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: market_id
          in: path
          description: id associated with the target Market
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Market Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Market'
    delete:
      tags:
        - market
      summary: delete market by id
      description: Delete a Market from the system. Will soft-delete.
      operationId: deleteMarket
      parameters:
        - name: market_id
          in: path
          description: The id of the Market that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid Market supplied
        '404':
          description: Market not found
  /product:
    post:
      tags:
        - product
      summary: create a new product
      description: Add a Product
      operationId: createProduct
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Product'
    put:
      tags:
        - product
      summary: update product
      description: This method allows an Product to be corrected
      operationId: updateProduct
      parameters:
        - name: product_id
          in: query
          description: product that needs to be corrected
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid product supplied
        '404':
          description: Product not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
        description: Updated product object
        required: true
    get:
      tags:
        - product
      summary: get products
      description: Get Products
      operationId: getProducts
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Product Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Product'
  '/product/{product_id}':
    get:
      tags:
        - product
      summary: get product by id
      description: Get a Product by Id
      operationId: getProduct
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: product_id
          in: path
          description: id associated with the target Product
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Product Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Product'
    delete:
      tags:
        - product
      summary: delete product by id
      description: Delete a Product from the system. Will soft-delete.
      operationId: deleteProduct
      parameters:
        - name: product_id
          in: path
          description: The id of the Product that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid Product supplied
        '404':
          description: Product not found
  /transaction:
    post:
      tags:
        - transaction
      summary: create a new transaction
      description: Add a Transaction
      operationId: createTransaction
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Transaction'
    put:
      tags:
        - transaction
      summary: update transaction
      description: This method allows an Transaction to be corrected
      operationId: updateTransaction
      parameters:
        - name: transaction_id
          in: query
          description: transaction that needs to be corrected
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid transaction supplied
        '404':
          description: Transaction not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        description: Updated transaction object
        required: true
    get:
      tags:
        - transaction
      summary: get transactions
      description: Get Transactions
      operationId: getTransactions
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Transaction Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Transaction'
  '/transaction/{transaction_id}':
    get:
      tags:
        - transaction
      summary: get transaction by id
      description: Get a Transaction by Id
      operationId: getTransaction
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: transaction_id
          in: path
          description: id associated with the target Transaction
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Transaction Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Transaction'
    delete:
      tags:
        - transaction
      summary: delete transaction by id
      description: Delete a Transaction from the system. Will soft-delete.
      operationId: deleteTransaction
      parameters:
        - name: transaction_id
          in: path
          description: The id of the Transaction that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid Transaction supplied
        '404':
          description: Transaction not found
  /user:
    post:
      tags:
        - user
      summary: create a new user
      description: Add a User
      operationId: createUser
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/User'
    put:
      tags:
        - user
      summary: update user
      description: This method allows an User to be corrected
      operationId: updateUser
      parameters:
        - name: user_id
          in: query
          description: user that needs to be corrected
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        description: Updated user object
        required: true
    get:
      tags:
        - user
      summary: get users
      description: Get Users
      operationId: getUsers
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: User Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/User'
  '/user/{user_id}':
    get:
      tags:
        - user
      summary: get user by id
      description: Get a User by Id
      operationId: getUser
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: user_id
          in: path
          description: id associated with the target User
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: User Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - user
      summary: delete user by id
      description: Delete a User from the system. Will soft-delete.
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: The id of the User that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid User supplied
        '404':
          description: User not found
  /wallet:
    post:
      tags:
        - wallet
      summary: create a new wallet
      description: Add a Wallet
      operationId: createWallet
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Wallet'
    put:
      tags:
        - wallet
      summary: update wallet
      description: This method allows an Wallet to be corrected
      operationId: updateWallet
      parameters:
        - name: wallet_id
          in: query
          description: wallet that needs to be corrected
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid wallet supplied
        '404':
          description: Wallet not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Wallet'
        description: Updated wallet object
        required: true
    get:
      tags:
        - wallet
      summary: get wallets
      description: Get Wallets
      operationId: getWallets
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: Wallet Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Wallet'
  '/wallet/{wallet_id}':
    get:
      tags:
        - wallet
      summary: get wallet by id
      description: Get a Wallet by Id
      operationId: getWallet
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: wallet_id
          in: path
          description: id associated with the target Wallet
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: Wallet Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/Wallet'
    delete:
      tags:
        - wallet
      summary: delete wallet by id
      description: Delete a Wallet from the system. Will soft-delete.
      operationId: deleteWallet
      parameters:
        - name: wallet_id
          in: path
          description: The id of the Wallet that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid Wallet supplied
        '404':
          description: Wallet not found
  /wallet_data:
    post:
      tags:
        - wallet_data
      summary: create a new wallet_data
      description: Add a WalletData
      operationId: createWalletData
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '400':
          description: Malformed request
        '401':
          description: Login required
        '403':
          description: unauthorized
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/WalletData'
    put:
      tags:
        - wallet_data
      summary: update wallet_data
      description: This method allows an WalletData to be corrected
      operationId: updateWalletData
      parameters:
        - name: wallet_data_id
          in: query
          description: wallet_data that needs to be corrected
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid wallet_data supplied
        '404':
          description: WalletData not found
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WalletData'
        description: Updated wallet_data object
        required: true
    get:
      tags:
        - wallet_data
      summary: get wallet_datas
      description: Get WalletDatas
      operationId: getWalletDatas
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      responses:
        '200':
          description: WalletData Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/WalletData'
  '/wallet_data/{wallet_data_id}':
    get:
      tags:
        - wallet_data
      summary: get wallet_data by id
      description: Get a WalletData by Id
      operationId: getWalletData
      externalDocs:
        description: More details
        url: 'https://github.com/exleym/coinpl/blob/master/README.md'
      parameters:
        - name: wallet_data_id
          in: path
          description: id associated with the target WalletData
          required: true
          explode: false
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: WalletData Response
          content:
            application/json:
              schema:
                description: Successful operation
                $ref: '#/components/schemas/WalletData'
    delete:
      tags:
        - wallet_data
      summary: delete wallet_data by id
      description: Delete a WalletData from the system. Will soft-delete.
      operationId: deleteWalletData
      parameters:
        - name: wallet_data_id
          in: path
          description: The id of the WalletData that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid WalletData supplied
        '404':
          description: WalletData not found
components:
  schemas:
    Alert:
      title: alert
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        timestamp:
          type: string
          description: time alert was created
          example: '2017-11-25 18:04:38'
        alert_type_id:
          type: integer
          description: foreign key to AlertType
          example: 1
        approved:
          type: boolean
          description: is Alert signed-off on
          example: false
        approving_user_id:
          type: integer
          description: 'if alert has been approved, foreign key to user who approved'
          example: 42
        approval_timestamp:
          type: string
          description: when alert was approved
          example: '2017-11-25 19:04:38'
    AlertType:
      title: alert type
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        name:
          type: string
          description: alert type name
          example: 'Trade Execution Alert'
        short_name:
          type: string
          description: abbreviated name for display
          example: 'ExecutionAlert'
    Currency:
      title: currency
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        symbol:
          type: string
          description: short code for currency
          example: 'XBT'
        name:
          type: string
          description: currency name
          example: 'Bitcoin'
        min_size:
          type: number
          description: minimum transaction size
          example: '0.001'
        ipo_date:
          type: string
          description: date of currency IPO
          example: '2009-01-03'
        currency_limit:
          type: integer
          description: maximum number of coins outstanding
          example: 21000000
    Cut:
      title: cut
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        wallet_id:
          type: integer
          description: foreign key to a wallet
          example: 314159
        effective:
          type: string
          description: cut effective time
          example: '2017-12-12 00:00:00'
        cut_time:
          type: string
          description: time cut was actually run
          example: '2017-12-12 00:37:21'
        pl_version_id:
          type: integer
          description: version of the PL system used to make cut
          example: 12345
    Exchange:
      title: exchange
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        symbol:
          type: string
          description: human readable id for exchange
          example: 'CBS'
        name:
          type: string
          description: long (formal) name of exchange
          example: 'Coinbase'
        url:
          type: string
          description: base url for linking to exchange
          example: 'http://www.coinbase.com'
        active:
          type: boolean
          description: flag for determining if exchange still operates
          example: true
    Holding:
      title: holding
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        wallet_id:
          type: integer
          description: foreign key to a wallet
          example: 314159
        currency_id:
          type: integer
          description: foreign key to a currency
          example: 12
        cut_id:
          type: integer
          description: foreign key to the cut responsible for this value
          example: 123456
        cut_date:
          type: string
          description: date of holding / cut
          example: '2017-12-14'
        quantity:
          type: number
          description: quantity held in this wallet
        price:
          type: number
          description: prevailing price at cut time
    Market:
      title: market
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        timestamp:
          type: string
          description: timestamp of quote
          example: '2017-12-14 08:15:00'
        sequence:
          type: integer
          description: exchange identifier for quote
          example: 123456789123
        product_id:
          type: integer
          description: foreign key to the FX product (XBT/USD)
          example: 126
        bid_price:
          type: number
          description: best bid
          example: 17243.45
        bid_size:
          type: number
          description: size that can be executed at bid_price
          example: 243.123
        bid_parties:
          type: integer
          description: number of active parties on the best bid
          example: 6
        ask_price:
          type: number
          description: best offer
          example: 17266.98
        ask_size:
          type: number
          description: size that can be executed at ask_price
          example: 101.456
        ask_parties:
          type: integer
          description: number of active parties on the best offer
          example: 4
    Product:
      title: product
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        symbol:
          type: string
          description: cross-currency ticker
          example: 'XBT/USD'
        base_currency_id:
          type: integer
          description: foreign key to a currency
          example: 12
        quote_currency_id:
          type: integer
          description: foreign key to a currency
          example: 21
        base_min_size:
          type: number
          description: minimum quotable size
          example: 0.001
        base_max_size:
          type: number
          description: maximum quotable size
          example: 100.0
        quote_increment:
          type: number
          description: price increments in quoting currency
          example: 0.001
        display_name:
          type: string
          description: pretty name for currency
          example: 'XBT-USD'
        margin_enabled:
          type: boolean
          description: can users trade this product on margin?
          example: false
    Transaction:
      title: transaction
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        currency_id:
          type: integer
          description: currency transacted (FK to Currency)
          example: 42
        exchange_id:
          type: integer
          description: transaction exchange (FK to an Exchange)
          example: 4
        wallet_id:
          type: integer
          description: transaction wallet (FK to a Wallet)
          example: 21
        trade_time:
          type: string
          description: timestamp of trade
          example: '2017-12-17 18:40:25'
        quantity:
          type: number
          description: transaction size
          example: 0.765
        execution_price:
          type: number
          description: transaction price
          example: 345.222
        commission:
          type: number
          description: commission paid to the exchange
          example: 0.0264
    User:
      title: user
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        alias:
          type: string
          description: username (up to 64 characters)
          example: 'DildoBaggins'
        first_name:
          type: string
          description: user first name (up to 32 characters)
          example: 'Harry'
        last_name:
          type: string
          description: user last name (up to 32 characters)
          example: 'Hood'
        email:
          type: string
          description: user email (unique - up to 64 char)
          example: 'info@coinpl.com'
        moderator:
          type: boolean
          description: user is mod
          example: false
        admin:
          type: boolean
          description: user is admin
          example: false
        created:
          type: string
          description: timestamp of user creation
          example: '2017-12-17 19:03:25'
        updated:
          type: string
          description: timestamp of user update
          example: '2017-12-17 19:03:25'
    Wallet:
      title: wallet
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        owner_id:
          type: integer
          description: wallet owner (FK to User)
          example: 9
        exchange_id:
          type: integer
          description: wallet affiliated exchange (optional FK to Exchange)
          example: 33
        currency_id:
          type: integer
          description: wallet currency (FK to Currency)
          example: 99
        name:
          type: string
          description: wallet name (max 128 characters)
          example: 'Bitstamp XBT Wallet'
        inception_date:
          type: string
          description: datetime of wallet creation
          example: '2017-12-17 19:21:12'
        address:
          type: string
          description: wallet address (len 34)
          example: '1LStTNEH7m6KLRKGghCiXUNR4fNnwvD2iP'
        deactivated:
          type: boolean
          description: has wallet been deactivated
          example: false
    WalletData:
      title: wallet data
      type: object
      properties:
        id:
          type: integer
          description: primary key identifier
          example: 1
        wallet_id:
          type: integer
          description: wallet (FK to Wallet)
          example: 2
        cut_id:
          type: integer
          description: foreign key to a PL cut (FK to Cut)
          example: 36
        effective:
          type: string
          description: effective date
          example: '2017-12-17'
        nav:
          type: number
          description: net asset value in wallet (USD)
          example: 543.21
        invested_value:
          type: number
          description: total invested value in wallet (USD)
          example: 543.21
        superceded:
          type: boolean
          description: flag if data has been superceded
          example: false
  requestBodies:
    Alert:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Alert'
      description: Alert creation to pass to users
      required: true
    AlertType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlertType'
      description: Create a new AlertType in system
      required: true
    Currency:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Currency'
      description: Currency creation
      required: true
    Cut:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Cut'
      description: Cut creation
      required: true
    Exchange:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Exchange'
      description: Exchange creation
      required: true
    Holding:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Holding'
      description: Holdings
      required: true
    Market:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Market'
      description: Market
      required: true
    Product:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
      description: Product
      required: true
    Transaction:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Transaction'
      description: Transaction
      required: true
    User:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/User'
      description: User
      required: true
    Wallet:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Wallet'
      description: User
      required: true
    WalletData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WalletData'
      description: User
      required: true